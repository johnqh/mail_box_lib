
> @johnqh/lib@3.1.4 test
> vitest --reporter=json

{"numTotalTestSuites":79,"numPassedTestSuites":79,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":142,"numPassedTests":142,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1757862607763,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Wallet Status Types and Utilities","isWalletConnected"],"fullName":"Wallet Status Types and Utilities isWalletConnected should return false for undefined status","status":"passed","title":"should return false for undefined status","duration":0.707917000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletConnected"],"fullName":"Wallet Status Types and Utilities isWalletConnected should return false for empty wallet address","status":"passed","title":"should return false for empty wallet address","duration":0.1469579999999837,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletConnected"],"fullName":"Wallet Status Types and Utilities isWalletConnected should return true for valid wallet address","status":"passed","title":"should return true for valid wallet address","duration":0.1113749999999527,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletConnected"],"fullName":"Wallet Status Types and Utilities isWalletConnected should return true for verified wallet","status":"passed","title":"should return true for verified wallet","duration":0.13587499999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return false for undefined status","status":"passed","title":"should return false for undefined status","duration":0.06662499999998772,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return false for connected but not verified wallet","status":"passed","title":"should return false for connected but not verified wallet","duration":0.04787499999997635,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return false for wallet with only message","status":"passed","title":"should return false for wallet with only message","duration":0.04741700000005267,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return false for wallet with only signature","status":"passed","title":"should return false for wallet with only signature","duration":0.042709000000002106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return false for wallet with empty message","status":"passed","title":"should return false for wallet with empty message","duration":0.12170900000000984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return false for wallet with empty signature","status":"passed","title":"should return false for wallet with empty signature","duration":0.17862500000001091,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","isWalletVerified"],"fullName":"Wallet Status Types and Utilities isWalletVerified should return true for fully verified wallet","status":"passed","title":"should return true for fully verified wallet","duration":0.04837500000002137,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","getWalletConnectionState"],"fullName":"Wallet Status Types and Utilities getWalletConnectionState should return DISCONNECTED for undefined status","status":"passed","title":"should return DISCONNECTED for undefined status","duration":0.05937499999998863,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","getWalletConnectionState"],"fullName":"Wallet Status Types and Utilities getWalletConnectionState should return DISCONNECTED for empty wallet address","status":"passed","title":"should return DISCONNECTED for empty wallet address","duration":0.04424999999997681,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","getWalletConnectionState"],"fullName":"Wallet Status Types and Utilities getWalletConnectionState should return CONNECTED for wallet with address only","status":"passed","title":"should return CONNECTED for wallet with address only","duration":0.24320799999998144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","getWalletConnectionState"],"fullName":"Wallet Status Types and Utilities getWalletConnectionState should return CONNECTED for wallet with address and message only","status":"passed","title":"should return CONNECTED for wallet with address and message only","duration":0.05870799999996734,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","getWalletConnectionState"],"fullName":"Wallet Status Types and Utilities getWalletConnectionState should return CONNECTED for wallet with address and signature only","status":"passed","title":"should return CONNECTED for wallet with address and signature only","duration":0.039540999999985615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","getWalletConnectionState"],"fullName":"Wallet Status Types and Utilities getWalletConnectionState should return VERIFIED for fully verified wallet","status":"passed","title":"should return VERIFIED for fully verified wallet","duration":0.11104100000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","WalletConnectionState enum"],"fullName":"Wallet Status Types and Utilities WalletConnectionState enum should have correct string values","status":"passed","title":"should have correct string values","duration":0.06299999999998818,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","Type Safety"],"fullName":"Wallet Status Types and Utilities Type Safety should provide correct type narrowing for isWalletConnected","status":"passed","title":"should provide correct type narrowing for isWalletConnected","duration":0.04620799999997871,"failureMessages":[],"meta":{}},{"ancestorTitles":["Wallet Status Types and Utilities","Type Safety"],"fullName":"Wallet Status Types and Utilities Type Safety should provide correct type narrowing for isWalletVerified","status":"passed","title":"should provide correct type narrowing for isWalletVerified","duration":0.13816700000000992,"failureMessages":[],"meta":{}}],"startTime":1757862609074,"endTime":1757862609076.2432,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/types/__tests__/wallet-status.test.ts"},{"assertionResults":[{"ancestorTitles":["useDebounce"],"fullName":"useDebounce should return initial value immediately","status":"passed","title":"should return initial value immediately","duration":7.3840000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce"],"fullName":"useDebounce should debounce value changes","status":"passed","title":"should debounce value changes","duration":4.183999999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce"],"fullName":"useDebounce should reset timer on rapid value changes","status":"passed","title":"should reset timer on rapid value changes","duration":1.973916000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce"],"fullName":"useDebounce should work with different data types","status":"passed","title":"should work with different data types","duration":1.5507920000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce"],"fullName":"useDebounce should use default delay when not provided","status":"passed","title":"should use default delay when not provided","duration":1.1045409999999265,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebounce"],"fullName":"useDebounce should handle delay changes","status":"passed","title":"should handle delay changes","duration":1.056791999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should debounce callback execution","status":"passed","title":"should debounce callback execution","duration":1.2636660000000575,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should cancel previous timeout on new calls","status":"passed","title":"should cancel previous timeout on new calls","duration":0.7672910000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should update callback reference","status":"passed","title":"should update callback reference","duration":1.0275419999999258,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should preserve callback arguments","status":"passed","title":"should preserve callback arguments","duration":0.8405839999999216,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should use default delay when not provided","status":"passed","title":"should use default delay when not provided","duration":0.6716669999999567,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should clean up timeout on unmount","status":"passed","title":"should clean up timeout on unmount","duration":1.8212080000000697,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should handle delay changes","status":"passed","title":"should handle delay changes","duration":1.8699169999999867,"failureMessages":[],"meta":{}},{"ancestorTitles":["useDebouncedCallback"],"fullName":"useDebouncedCallback should work with complex callback signatures","status":"passed","title":"should work with complex callback signatures","duration":1.5586250000000064,"failureMessages":[],"meta":{}}],"startTime":1757862608644,"endTime":1757862608670.5586,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/hooks/__tests__/useDebounce.test.ts"},{"assertionResults":[{"ancestorTitles":["useLocalStorage","initialization"],"fullName":"useLocalStorage initialization should return initial value when localStorage is empty","status":"passed","title":"should return initial value when localStorage is empty","duration":7.5483749999999645,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","initialization"],"fullName":"useLocalStorage initialization should return stored value when localStorage has data","status":"passed","title":"should return stored value when localStorage has data","duration":0.9264589999999089,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","initialization"],"fullName":"useLocalStorage initialization should handle JSON parsing errors gracefully","status":"passed","title":"should handle JSON parsing errors gracefully","duration":2.254709000000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","initialization"],"fullName":"useLocalStorage initialization should work with complex objects","status":"passed","title":"should work with complex objects","duration":0.9625829999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","setValue"],"fullName":"useLocalStorage setValue should update localStorage and state with new value","status":"passed","title":"should update localStorage and state with new value","duration":2.37012500000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","setValue"],"fullName":"useLocalStorage setValue should work with function updates","status":"passed","title":"should work with function updates","duration":1.0963329999999587,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","setValue"],"fullName":"useLocalStorage setValue should handle localStorage errors gracefully","status":"passed","title":"should handle localStorage errors gracefully","duration":1.2019159999999829,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","removeValue"],"fullName":"useLocalStorage removeValue should remove value from localStorage and reset to initial","status":"passed","title":"should remove value from localStorage and reset to initial","duration":1.2852920000000267,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","removeValue"],"fullName":"useLocalStorage removeValue should handle removeItem errors gracefully","status":"passed","title":"should handle removeItem errors gracefully","duration":2.6020829999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","custom serialization"],"fullName":"useLocalStorage custom serialization should use custom serialize and deserialize functions","status":"passed","title":"should use custom serialize and deserialize functions","duration":3.2771249999999554,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","event listeners"],"fullName":"useLocalStorage event listeners should set up storage event listeners","status":"passed","title":"should set up storage event listeners","duration":1.3119159999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","event listeners"],"fullName":"useLocalStorage event listeners should clean up event listeners on unmount","status":"passed","title":"should clean up event listeners on unmount","duration":2.207125000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","event listeners"],"fullName":"useLocalStorage event listeners should handle storage events from other tabs","status":"passed","title":"should handle storage events from other tabs","duration":1.4428750000000719,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","event listeners"],"fullName":"useLocalStorage event listeners should handle custom events for same-tab synchronization","status":"passed","title":"should handle custom events for same-tab synchronization","duration":3.164583000000107,"failureMessages":[],"meta":{}},{"ancestorTitles":["useLocalStorage","non-web environment support"],"fullName":"useLocalStorage non-web environment support should work when localStorage is not available","status":"passed","title":"should work when localStorage is not available","duration":0.912375000000111,"failureMessages":[],"meta":{}}],"startTime":1757862608662,"endTime":1757862608694.9124,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/hooks/__tests__/useLocalStorage.test.ts"},{"assertionResults":[{"ancestorTitles":["IndexerClient","initialization"],"fullName":"IndexerClient initialization should create instance with config successfully","status":"passed","title":"should create instance with config successfully","duration":1.020208000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","initialization"],"fullName":"IndexerClient initialization should create instance with endpoint URL","status":"passed","title":"should create instance with endpoint URL","duration":0.19249999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","initialization"],"fullName":"IndexerClient initialization should handle missing config gracefully","status":"passed","title":"should handle missing config gracefully","duration":0.15008299999999508,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","validateAddress"],"fullName":"IndexerClient validateAddress should validate address successfully","status":"passed","title":"should validate address successfully","duration":1.5768339999999625,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","validateAddress"],"fullName":"IndexerClient validateAddress should handle validation errors","status":"passed","title":"should handle validation errors","duration":0.6931670000000167,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","getEmailAddresses"],"fullName":"IndexerClient getEmailAddresses should get email addresses with authentication","status":"passed","title":"should get email addresses with authentication","duration":0.37008300000002237,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","error handling"],"fullName":"IndexerClient error handling should handle network errors","status":"passed","title":"should handle network errors","duration":0.29866599999991195,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","error handling"],"fullName":"IndexerClient error handling should handle timeout errors","status":"passed","title":"should handle timeout errors","duration":143.62675000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","edge cases"],"fullName":"IndexerClient edge cases should handle empty wallet address","status":"passed","title":"should handle empty wallet address","duration":1.1774580000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerClient","edge cases"],"fullName":"IndexerClient edge cases should handle missing signature parameters","status":"passed","title":"should handle missing signature parameters","duration":2.1236249999999472,"failureMessages":[],"meta":{}}],"startTime":1757862608637,"endTime":1757862608789.1235,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/network/clients/__tests__/indexer.test.ts"},{"assertionResults":[{"ancestorTitles":["WildDuckAPI","initialization"],"fullName":"WildDuckAPI initialization should create instance successfully","status":"passed","title":"should create instance successfully","duration":1.3266670000000431,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","initialization"],"fullName":"WildDuckAPI initialization should initialize with Cloudflare worker config","status":"passed","title":"should initialize with Cloudflare worker config","duration":0.2739999999998872,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","initialization"],"fullName":"WildDuckAPI initialization should throw on invalid config","status":"passed","title":"should throw on invalid config","duration":0.6376659999998537,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","authentication"],"fullName":"WildDuckAPI authentication should authenticate with password successfully","status":"passed","title":"should authenticate with password successfully","duration":1.5867499999999382,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","authentication"],"fullName":"WildDuckAPI authentication should handle authentication failure","status":"passed","title":"should handle authentication failure","duration":0.306041999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","authentication"],"fullName":"WildDuckAPI authentication should handle signature-based authentication","status":"passed","title":"should handle signature-based authentication","duration":0.22162500000013097,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","user operations"],"fullName":"WildDuckAPI user operations should get user info successfully","status":"passed","title":"should get user info successfully","duration":0.3640419999999267,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","user operations"],"fullName":"WildDuckAPI user operations should get mailboxes successfully","status":"passed","title":"should get mailboxes successfully","duration":0.6069999999999709,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","error handling"],"fullName":"WildDuckAPI error handling should handle network errors gracefully","status":"passed","title":"should handle network errors gracefully","duration":4.187249999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","error handling"],"fullName":"WildDuckAPI error handling should handle API errors with proper formatting","status":"passed","title":"should handle API errors with proper formatting","duration":0.43100000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","error handling"],"fullName":"WildDuckAPI error handling should handle invalid user ID format","status":"passed","title":"should handle invalid user ID format","duration":0.34208399999988615,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","edge cases"],"fullName":"WildDuckAPI edge cases should handle empty responses","status":"passed","title":"should handle empty responses","duration":0.3068749999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["WildDuckAPI","edge cases"],"fullName":"WildDuckAPI edge cases should validate required parameters","status":"passed","title":"should validate required parameters","duration":1.756541999999854,"failureMessages":[],"meta":{}}],"startTime":1757862609064,"endTime":1757862609076.7566,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/network/clients/__tests__/wildduck.test.ts"},{"assertionResults":[{"ancestorTitles":["useWalletStatus","Initial State"],"fullName":"useWalletStatus Initial State should start with undefined status","status":"passed","title":"should start with undefined status","duration":8.928583000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","Wallet Connection"],"fullName":"useWalletStatus Wallet Connection should update when wallet is connected","status":"passed","title":"should update when wallet is connected","duration":2.3628340000000208,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","Wallet Connection"],"fullName":"useWalletStatus Wallet Connection should update when wallet is verified","status":"passed","title":"should update when wallet is verified","duration":1.125332999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","Wallet Connection"],"fullName":"useWalletStatus Wallet Connection should update when wallet is disconnected","status":"passed","title":"should update when wallet is disconnected","duration":1.321666999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","External State Changes"],"fullName":"useWalletStatus External State Changes should react to external status changes","status":"passed","title":"should react to external status changes","duration":1.3133749999999509,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","Hook Actions"],"fullName":"useWalletStatus Hook Actions should update wallet address while preserving verification","status":"passed","title":"should update wallet address while preserving verification","duration":1.2520409999999629,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","Hook Actions"],"fullName":"useWalletStatus Hook Actions should clear verification while keeping wallet connected","status":"passed","title":"should clear verification while keeping wallet connected","duration":1.011333000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletStatus","Function Stability"],"fullName":"useWalletStatus Function Stability should maintain stable function references","status":"passed","title":"should maintain stable function references","duration":1.6044590000000198,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletAddress"],"fullName":"useWalletAddress should start with undefined address","status":"passed","title":"should start with undefined address","duration":1.090208999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletAddress"],"fullName":"useWalletAddress should update when wallet address changes","status":"passed","title":"should update when wallet address changes","duration":0.8423330000000533,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletAddress"],"fullName":"useWalletAddress should return undefined when wallet is disconnected","status":"passed","title":"should return undefined when wallet is disconnected","duration":1.298832999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletConnectionState"],"fullName":"useWalletConnectionState should start with disconnected state","status":"passed","title":"should start with disconnected state","duration":2.632583000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletConnectionState"],"fullName":"useWalletConnectionState should update through all connection states","status":"passed","title":"should update through all connection states","duration":0.7173749999999472,"failureMessages":[],"meta":{}},{"ancestorTitles":["useWalletConnectionState"],"fullName":"useWalletConnectionState should handle state transitions correctly","status":"passed","title":"should handle state transitions correctly","duration":0.929416999999944,"failureMessages":[],"meta":{}}],"startTime":1757862608666,"endTime":1757862608692.9294,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/hooks/core/__tests__/useWalletStatus.test.ts"},{"assertionResults":[{"ancestorTitles":["useIndexerMail"],"fullName":"useIndexerMail should initialize with default values","status":"passed","title":"should initialize with default values","duration":6.618875000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["useIndexerMail"],"fullName":"useIndexerMail should handle successful operations","status":"passed","title":"should handle successful operations","duration":0.8182920000000422,"failureMessages":[],"meta":{}},{"ancestorTitles":["useIndexerMail"],"fullName":"useIndexerMail should handle error cases","status":"passed","title":"should handle error cases","duration":0.7595420000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["useIndexerMail"],"fullName":"useIndexerMail should cleanup properly on unmount","status":"passed","title":"should cleanup properly on unmount","duration":3.2192079999999805,"failureMessages":[],"meta":{}}],"startTime":1757862608699,"endTime":1757862608710.2192,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/hooks/indexer/__tests__/useIndexerMail.test.ts"},{"assertionResults":[{"ancestorTitles":["IndexerService","initialization"],"fullName":"IndexerService initialization should create instance successfully","status":"passed","title":"should create instance successfully","duration":1.306291999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerService","initialization"],"fullName":"IndexerService initialization should create singleton instance","status":"passed","title":"should create singleton instance","duration":0.15899999999999181,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerService","core functionality"],"fullName":"IndexerService core functionality should get email addresses successfully","status":"passed","title":"should get email addresses successfully","duration":43.54158399999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerService","core functionality"],"fullName":"IndexerService core functionality should handle cache operations","status":"passed","title":"should handle cache operations","duration":0.4014999999999418,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerService","edge cases"],"fullName":"IndexerService edge cases should handle empty/null inputs","status":"passed","title":"should handle empty/null inputs","duration":0.1460419999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["IndexerService","edge cases"],"fullName":"IndexerService edge cases should validate input parameters","status":"passed","title":"should validate input parameters","duration":0.05304100000000744,"failureMessages":[],"meta":{}}],"startTime":1757862608637,"endTime":1757862608683.053,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/core/indexer/__tests__/indexer-service.test.ts"},{"assertionResults":[{"ancestorTitles":["WalletStatusManager","Singleton Pattern"],"fullName":"WalletStatusManager Singleton Pattern should return the same instance","status":"passed","title":"should return the same instance","duration":0.8049170000000458,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Initial State"],"fullName":"WalletStatusManager Initial State should start with undefined status","status":"passed","title":"should start with undefined status","duration":0.3084169999999631,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Connection"],"fullName":"WalletStatusManager Wallet Connection should connect wallet with address","status":"passed","title":"should connect wallet with address","duration":0.2703750000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Connection"],"fullName":"WalletStatusManager Wallet Connection should throw error for empty wallet address","status":"passed","title":"should throw error for empty wallet address","duration":0.5097910000000638,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Connection"],"fullName":"WalletStatusManager Wallet Connection should trim wallet address","status":"passed","title":"should trim wallet address","duration":0.06674999999995634,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Verification"],"fullName":"WalletStatusManager Wallet Verification should verify wallet with message and signature","status":"passed","title":"should verify wallet with message and signature","duration":0.2304589999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Verification"],"fullName":"WalletStatusManager Wallet Verification should throw error for missing verification data","status":"passed","title":"should throw error for missing verification data","duration":0.23258399999997437,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Verification"],"fullName":"WalletStatusManager Wallet Verification should trim verification data","status":"passed","title":"should trim verification data","duration":0.07741699999996854,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Wallet Disconnection"],"fullName":"WalletStatusManager Wallet Disconnection should disconnect wallet and clear status","status":"passed","title":"should disconnect wallet and clear status","duration":0.2039999999999509,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Address Updates"],"fullName":"WalletStatusManager Address Updates should update wallet address while preserving verification","status":"passed","title":"should update wallet address while preserving verification","duration":0.11250000000006821,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Address Updates"],"fullName":"WalletStatusManager Address Updates should connect wallet if no current status exists","status":"passed","title":"should connect wallet if no current status exists","duration":0.10391699999991033,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Clear Verification"],"fullName":"WalletStatusManager Clear Verification should clear verification while keeping wallet connected","status":"passed","title":"should clear verification while keeping wallet connected","duration":0.11816599999997379,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Clear Verification"],"fullName":"WalletStatusManager Clear Verification should do nothing if no wallet connected","status":"passed","title":"should do nothing if no wallet connected","duration":0.04870799999991959,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Event Listeners"],"fullName":"WalletStatusManager Event Listeners should notify listeners on status changes","status":"passed","title":"should notify listeners on status changes","duration":1.7570409999999583,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Event Listeners"],"fullName":"WalletStatusManager Event Listeners should handle listener errors gracefully","status":"passed","title":"should handle listener errors gracefully","duration":0.5242500000000518,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Event Listeners"],"fullName":"WalletStatusManager Event Listeners should manage listener subscriptions correctly","status":"passed","title":"should manage listener subscriptions correctly","duration":0.26445799999999053,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","Event Listeners"],"fullName":"WalletStatusManager Event Listeners should clear all listeners","status":"passed","title":"should clear all listeners","duration":0.09354199999995672,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","State Transitions"],"fullName":"WalletStatusManager State Transitions should handle complete workflow: disconnect -> connect -> verify -> disconnect","status":"passed","title":"should handle complete workflow: disconnect -> connect -> verify -> disconnect","duration":0.07779199999993125,"failureMessages":[],"meta":{}},{"ancestorTitles":["WalletStatusManager","State Transitions"],"fullName":"WalletStatusManager State Transitions should handle direct verification (skip connect step)","status":"passed","title":"should handle direct verification (skip connect step)","duration":0.049790999999913765,"failureMessages":[],"meta":{}}],"startTime":1757862608644,"endTime":1757862608650.2644,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/core/wallet/__tests__/wallet-status-manager.test.ts"},{"assertionResults":[{"ancestorTitles":["DefaultEmailOperations","initialization"],"fullName":"DefaultEmailOperations initialization should create instance successfully","status":"passed","title":"should create instance successfully","duration":1.9482080000000224,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultEmailOperations","email processing"],"fullName":"DefaultEmailOperations email processing should process email data successfully","status":"passed","title":"should process email data successfully","duration":2.18258400000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultEmailOperations","email processing"],"fullName":"DefaultEmailOperations email processing should handle email processing errors","status":"passed","title":"should handle email processing errors","duration":1.1952499999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultEmailOperations","email validation"],"fullName":"DefaultEmailOperations email validation should validate email structure correctly","status":"passed","title":"should validate email structure correctly","duration":0.22620900000003985,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultEmailOperations","email validation"],"fullName":"DefaultEmailOperations email validation should reject invalid email structure","status":"passed","title":"should reject invalid email structure","duration":0.1914160000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultEmailOperations","edge cases"],"fullName":"DefaultEmailOperations edge cases should handle null/undefined inputs","status":"passed","title":"should handle null/undefined inputs","duration":0.5567079999999578,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultEmailOperations","edge cases"],"fullName":"DefaultEmailOperations edge cases should validate required dependencies","status":"passed","title":"should validate required dependencies","duration":0.23795899999993253,"failureMessages":[],"meta":{}}],"startTime":1757862608622,"endTime":1757862608628.5566,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/core/email/__tests__/email-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["DefaultMailboxOperations","initialization"],"fullName":"DefaultMailboxOperations initialization should create instance successfully","status":"passed","title":"should create instance successfully","duration":0.9701660000000061,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","initialization"],"fullName":"DefaultMailboxOperations initialization should initialize with default folder configuration","status":"passed","title":"should initialize with default folder configuration","duration":0.2960419999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","folder operations"],"fullName":"DefaultMailboxOperations folder operations should get default folder successfully","status":"passed","title":"should get default folder successfully","duration":0.2427500000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","folder operations"],"fullName":"DefaultMailboxOperations folder operations should handle folder queries","status":"passed","title":"should handle folder queries","duration":0.17799999999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","folder operations"],"fullName":"DefaultMailboxOperations folder operations should validate folder permissions","status":"passed","title":"should validate folder permissions","duration":0.07604099999997516,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","mailbox management"],"fullName":"DefaultMailboxOperations mailbox management should manage mailbox state","status":"passed","title":"should manage mailbox state","duration":0.455250000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","mailbox management"],"fullName":"DefaultMailboxOperations mailbox management should handle mailbox synchronization","status":"passed","title":"should handle mailbox synchronization","duration":0.10520800000000463,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","error handling"],"fullName":"DefaultMailboxOperations error handling should handle invalid folder IDs","status":"passed","title":"should handle invalid folder IDs","duration":0.366375000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","error handling"],"fullName":"DefaultMailboxOperations error handling should handle query errors gracefully","status":"passed","title":"should handle query errors gracefully","duration":0.34729200000003857,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","edge cases"],"fullName":"DefaultMailboxOperations edge cases should handle null/undefined operations","status":"passed","title":"should handle null/undefined operations","duration":0.14366699999999355,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultMailboxOperations","edge cases"],"fullName":"DefaultMailboxOperations edge cases should validate operation parameters","status":"passed","title":"should validate operation parameters","duration":0.08766700000001038,"failureMessages":[],"meta":{}}],"startTime":1757862609092,"endTime":1757862609096.1436,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/core/mailbox/__tests__/mailbox-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["DefaultAuthBusinessLogic","initialization"],"fullName":"DefaultAuthBusinessLogic initialization should create instances successfully","status":"passed","title":"should create instances successfully","duration":0.9912499999999795,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","authentication business logic"],"fullName":"DefaultAuthBusinessLogic authentication business logic should validate wallet connection","status":"passed","title":"should validate wallet connection","duration":0.23237499999999045,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","authentication business logic"],"fullName":"DefaultAuthBusinessLogic authentication business logic should reject invalid wallet data","status":"passed","title":"should reject invalid wallet data","duration":0.214999999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","email address business logic"],"fullName":"DefaultAuthBusinessLogic email address business logic should parse email addresses correctly","status":"passed","title":"should parse email addresses correctly","duration":0.31725000000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","email address business logic"],"fullName":"DefaultAuthBusinessLogic email address business logic should handle invalid email addresses","status":"passed","title":"should handle invalid email addresses","duration":0.08100000000001728,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","AddressHelper utility"],"fullName":"DefaultAuthBusinessLogic AddressHelper utility should detect address types correctly","status":"passed","title":"should detect address types correctly","duration":0.17791599999998198,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","AddressHelper utility"],"fullName":"DefaultAuthBusinessLogic AddressHelper utility should handle unknown address formats","status":"passed","title":"should handle unknown address formats","duration":0.05958400000002939,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","edge cases"],"fullName":"DefaultAuthBusinessLogic edge cases should handle empty/null inputs","status":"passed","title":"should handle empty/null inputs","duration":0.39262500000000955,"failureMessages":[],"meta":{}},{"ancestorTitles":["DefaultAuthBusinessLogic","edge cases"],"fullName":"DefaultAuthBusinessLogic edge cases should validate input parameters","status":"passed","title":"should validate input parameters","duration":0.12725000000000364,"failureMessages":[],"meta":{}}],"startTime":1757862609132,"endTime":1757862609135.1272,"status":"passed","message":"","name":"/Users/qianghuang/mail_box_lib/src/business/core/auth/__tests__/auth-business-logic.test.ts"}]}
