name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "20"

jobs:
  build-and-test:
    name: Build, Test & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Configure npm authentication
        run: |
          cat > .npmrc << EOL
          audit-level=high
          @sudobility:registry=https://registry.npmjs.org/
          //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          EOL
          echo "Created .npmrc with authentication"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm run test:run

      - name: Build package
        run: npm run build

      - name: Verify build output
        run: |
          test -f dist/index.js || (echo "Missing dist/index.js" && exit 1)
          test -f dist/index.d.ts || (echo "Missing dist/index.d.ts" && exit 1)
          echo "✅ Build output verified"

      - name: Security audit
        run: npm audit --audit-level critical
        continue-on-error: false

      - name: Check if version changed
        id: version-check
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view @sudobility/lib version 2>/dev/null || echo "0.0.0")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "published-version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT

          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "🚀 Version changed: $PUBLISHED_VERSION → $CURRENT_VERSION"
          else
            echo "version-changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Version unchanged: $CURRENT_VERSION"
          fi

      - name: Publish to npm
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version-check.outputs.version-changed == 'true'
        run: npm publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version-check.outputs.version-changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version-check.outputs.current-version }}
          name: Release v${{ steps.version-check.outputs.current-version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version-check.outputs.version-changed == 'true'
        run: |
          echo "🎉 Successfully published @sudobility/lib@${{ steps.version-check.outputs.current-version }}"
          echo "📦 NPM: https://www.npmjs.com/package/@sudobility/lib/v/${{ steps.version-check.outputs.current-version }}"
          echo "🏷️ GitHub: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version-check.outputs.current-version }}"
