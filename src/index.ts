/**
 * @johnqh/lib - Shared utilities and common functions for 0xmail.box projects
 */

// Business Logic - Core business operations and enums (Goal 4)
export {
  // AI Services
  aiEmailService,
  aiSearchService,
  aiWeb3Service,

  // AI Types
  AIEmailService,
  AISearchService,
  AIWeb3Service,
  AIInsight,
  AIProcessingOptions,
  ContractExplanation,
  EmailCategory,
  EmailEntities,
  EmailIndex,
  EmailSummary,
  NFTAnalysis,
  ProtocolExplanation,
  ScamAnalysis,
  SearchCategory,
  SearchInsights,
  SearchQuery,
  SearchResult,
  SmartReply,
  TokenAnalysis,
  TransactionAnalysis,
  UserBehaviorPattern,
  Web3Entity,

  // Points System
  pointsService,
  PointsService,
  PointsAction,
  UserPoints,
  ReferralLink,
  ClaimablePoints,

  // Context
  QueryClientProvider,
  useQueryClient,
  getQueryClient,

  // Core Business Logic
  DefaultEmailOperations,
  EmailOperations,
  DefaultFolderOperations,
  FolderInfo,
  FolderOperations,
  DefaultMailboxOperations,
  MailboxOperations,
  DefaultFolder,
  DefaultNavigationOperations,
  NavigationOperations,
  NavigationStateManager,
  DefaultAuthBusinessLogic,
  AuthBusinessLogic,
  DefaultAnalyticsOperations,
  AnalyticsOperations,
  IndexerService,

  // Wallet Status Management
  walletStatusManager,
  WalletStatusManager,
  WalletStatusChangeListener,
  getWalletStatus,
  getWalletAddress,
  connectWallet,
  verifyWallet,
  disconnectWallet,
  subscribeToWalletStatus,

  // Services and DI
  ServiceContainer,
  ServiceContainerConfig,
  ServiceContainerContext,
  ServiceResolver,
  ServiceResolverContext,
  createServiceContainer,
  createBusinessLogicServices,
  createBusinessLogicServicesSync,

  // Query Management
  queryKeys,
  createQueryKey,
  getServiceKeys,
  QueryKey,
  queryClient,
  createQueryClient,
  initializeQueryClient,
  getGlobalQueryClient,
  STALE_TIMES,

  // Core Hooks
  useAsync,
  useAsyncOperation,
  UseAsyncOperationOptions,
  UseAsyncOperationReturn,
  useDebounce,
  useDebouncedCallback,
  useLocalStorage,
  useOptimizedState,
  useStorage,
  useService,
  useServiceContainer,
  useServiceResolver,

  // Wallet Hooks
  useWalletStatus,
  UseWalletStatusReturn,
  useWalletAddress,
  useWalletConnectionState,

  // Contract Hooks
  useContractConfig,
  UseContractConfigReturn,
  useMailerClient,
  UseMailerClientReturn,
  UseMailerClientOptions,
  useWalletDetector,
  UseWalletDetectorReturn,
  WalletInfo,

  // Indexer Hooks
  useIndexerPoints,
  useIndexerMail,
  UseIndexerMailReturn,
  IndexerMockData,
  useReferralCode,
  useReferralShare,
  useReferralConsumption,
  useReferralStats,

  // Name Service Hooks
  useNameServiceResolution,
  useENSFromWallet,
  useSNSFromWallet,
  useWalletFromENS,
  useWalletFromSNS,
  ENSResolutionResponse,
  SNSResolutionResponse,
  WalletResolutionResponse,

  // WildDuck Hooks
  useWildduckHealth,
  UseWildduckHealthReturn,
  useWildduckSettings,
  UseWildduckSettingsReturn,
  useWildduckMessages,
  UseWildduckMessagesReturn,
  useWildduckMailboxes,
  UseWildduckMailboxesReturn,
  useWildduckUsers,
  UseWildduckUsersReturn,
  useWildduckFilters,
  UseWildduckFiltersReturn,
  useWildduckAddresses,
  UseWildduckAddressesReturn,
  useWildduckAuth,
  UseWildduckAuthReturn,

  // WildDuck Query Hooks
  useWildduckHealthQuery,
  useWildduckUsersListQuery,
  useWildduckUserQuery,
  useWildduckUserAddressesQuery,
  useWildduckUserMessagesQuery,
  useWildduckMessageQuery,
  useWildduckUserFiltersQuery,
  useWildduckUserSettingsQuery,
  useWildduckUserMailboxesQuery,
  useWildduckAuthStatusQuery,
  useWildduckSearchMessagesQuery,

  // WildDuck Types
  WildduckHealthResponse,
  WildduckHealthStatus,
  WildduckUserSettings,
  WildduckFilter,
  WildduckAuthStatusResponse,
  WildduckUser,
  WildduckAddress,
  WildduckSettings,
  WildDuckMockData,
  WildduckMailbox,

  // Utility Hooks
  useArrayState,
  useBatchedState,
  useChangedValues,
  useDebouncedState,
  useMapState,
  usePrevious,

  // Service Hooks
  useAnalyticsService,
  useAppConfig,
  useAuthenticatedOperation,
  useFolderOperations,
  useNetworkService,
  useNotificationsService,
  usePersistenceService,
  useStorageService,
  useThemeService,

  // Helper Types
  EmailAddressBusinessLogic,
  EmailAddressHelper,
  GetMessagesOptions,
  ParsedEmailAddress,
  SendMessageParams,
  ServiceKeys,
  UserProperties,

  // Filter and Message Types
  CreateFilterParams,
  UpdateFilterParams,
} from './business';

// Platform Types (from container/dependency-container)
export type {
  PlatformAnalytics,
  PlatformNetwork,
  PlatformNotifications,
  PlatformStorage as PlatformStorageContainer,
  PlatformTheme,
} from './business/core/container/dependency-container';

// Dependency Injection - All DI types and interfaces from local di module
export type {
  AdvancedPlatformStorage,
  AnalyticsClient,
  AnalyticsConfig,
  AnalyticsContextProvider,
  AnalyticsEventData,
  AnalyticsEventProperties,
  // Analytics types
  AnalyticsService,
  AppConfig,
  EnvironmentVariables,
  // Environment types
  EnvProvider,
  LocationHook,
  NavigationConfig,
  NavigationHook,
  NavigationOptions,
  // Navigation types
  NavigationService,
  NavigationState,
  // Network types
  NetworkClient,
  NetworkResponse,
  NetworkRequestOptions,
  NotificationCapabilities,
  NotificationClient,
  NotificationConfig,
  NotificationContextProvider,
  NotificationOptions,
  NotificationPermissionResult,
  NotificationResult,
  // Notification types
  NotificationService,
  // Storage types
  PlatformStorage,
  SerializedStorageService,
  StorageProvider,
  StorageService,
} from './di';

// Re-export enums from local di module
export { WalletType, StorageType, NetworkError } from './di';

// Re-export ALL exports from @johnqh/types as named exports
export {
  // Constants
  ANIMATION,
  API_BASE_URL,
  API_RETRY_ATTEMPTS,
  API_RETRY_DELAY,
  API_TIMEOUT,
  AUTH_STATUS,
  CHAIN_TYPE,
  CLAIM_PERIOD_DAYS,
  DEFAULT_NETWORKS,
  DEFAULT_RPC_ENDPOINTS,
  EMAIL_CONFIG,
  ERROR_MESSAGES,
  EVM_CHAIN_IDS,
  EVM_USDC_ADDRESSES,
  EXTERNAL_LINKS,
  NETWORK_IDENTIFIERS,
  NETWORK_IDS,
  PROTOCOL_CONSTANTS,
  ROUTES,
  SOLANA_CHAIN_IDS,
  SOLANA_USDC_MINTS,
  STATUS_VALUES,
  STORAGE_KEYS,
  SUBSCRIPTION_TIERS,
  SUCCESS_MESSAGES,
  TIME_FORMAT,
  USDC_DECIMALS,
  WALLET_NAMES,
  Z_INDEX,

  // Types and Enums
  AddressType,
  AnalyticsEvent,
  AnalyticsEventBuilder,
  AuthStatus,
  ChainType,
  ConnectionState,
  ConnectionType,
  Currency,
  EmailAction,
  EmailAddressType,
  EmailComposeType,
  EmailFolderUtils,
  EmailSortCriteria,
  EmailValidationState,
  ErrorType,
  FeatureFlag,
  FontSize,
  LogLevel,
  MailboxType,
  MediumView,
  MessageType,
  MobileView,
  NetworkError as NetworkErrorType,
  NotificationType,
  PlatformType,
  RequestStatus,
  SortOrder,
  StorageType as StorageTypeEnum,
  SubscriptionAction,
  Theme,
  TransactionStatus,
  WalletType as WalletTypeEnum,
  Web3UsernameValidator,

  // Utility types
  Optional,

  // Business interfaces
  Email,
  EmailFolder,
  Folder,
  MailBox,

  // Utility functions
  addDays,
  addHours,
  apiLogger,
  authLogger,
  canAccessProtectedFeatures,
  capitalize,
  contractLogger,
  createAssertion,
  createAuthenticateRequest,
  createChainStatsId,
  createCreateMailboxRequest,
  createDelegationId,
  createMultiChainId,
  createPaginationRequest,
  createPreAuthRequest,
  createSearchParams,
  createSubmitMessageRequest,
  createURLSearchParams,
  createUserMultiChainId,
  createValidator,
  ensLogger,
  escapeHtml,
  extractNonceFromMessage,
  formatBigInt,
  formatBytes,
  formatEmailDate,
  formatNumber,
  formatRelativeTime,
  formatTimestamp,
  formatUSDC,
  formatWalletAddress,
  generateAuthMessage,
  generateNonce,
  getAddressType,
  getAllChainIds,
  getAllEVMChainIds,
  getAllSolanaChainIds,
  getAuthStatusText,
  getChainDisplayName,
  getDefaultRPCEndpoint,
  getEVMChainId,
  getEVMUSDCAddress,
  getInitials,
  getSolanaUSDCMint,
  getWalletConnectionState,
  hasRequiredProperties,
  isApiResponse,
  isArray,
  isAuthExpired,
  isAuthStatusConnected,
  isBlank,
  isBoolean,
  isDateInRange,
  isDelegatedToResponse,
  isDelegatedFromResponse,
  isENSName,
  isEVMChainId,
  isEVMNetwork,
  isEVMResponse,
  isEmail,
  isEmailAccountsResponse,
  isEntitlementResponse,
  isErrorResponse,
  isEvmAddress,
  isEvmRecipient,
  isIndexerErrorResponse,
  isIndexerSuccessResponse,
  isLeaderboardResponse,
  isMailboxErrorResponse,
  isNonceResponse,
  isNotBlank,
  isNullish,
  isNumber,
  isObject,
  isPointsResponse,
  isSNSName,
  isSignInMessageResponse,
  isSiteStatsResponse,
  isSolanaAddress,
  isSolanaChainId,
  isSolanaNetwork,
  isSolanaRecipient,
  isSolanaResponse,
  isString,
  isSuccessResponse,
  isTestNet,
  isUrl,
  isValidDate,
  isValidNonce,
  isValidSignature,
  isValidWalletAddress,
  isAddressValidationResponse,
  isWalletConnected,
  isWalletVerified,
  isWildDuckRequest,
  isZeroAddress,
  logger,
  normalizeAddress,
  normalizeWhitespace,
  optional,
  parseDate,
  parseEmailAddress,
  parseJson,
  parseSearchParams,
  parseUSDC,
  pluralize,
  randomString,
  searchParamsToString,
  storageLogger,
  stripHtml,
  toCamelCase,
  toKebabCase,
  toSnakeCase,
  toTitleCase,
  truncate,
  validateAddress,
  validateAmount,
  validateArray,
  validateDomain,
  validateEventArgs,
  validateMessage,
} from '@johnqh/types';

// Re-export from @johnqh/mail_box_contracts as named exports
export {
  OnchainMailerClient,
  WalletDetector,
} from '@johnqh/mail_box_contracts';

// Infrastructure - Network clients only
export {
  // Indexer Client
  IndexerClient,
  createIndexerClient,
  createIndexerApiConfig,

  // WildDuck Client
  WildDuckAPI,
  WildDuckConfig,
  createWildDuckAPI,
  emailToUserId,
  validateUserId,
  isValidObjectId,
} from './network';

// Utilities - General utility functions
export {
  // Direct Utils
  AppError,
  AsyncResult,
  URLSearchParamsLike,
  addDocumentEventListener,
  appendToDocumentHead,
  clearExpiredCache,
  createDocumentElement,
  debounceAsync,
  formatCurrency,
  formatFileSize,
  formatPercentage,
  getDocumentElement,
  getDocumentElementById,
  getDocumentHead,
  getDocumentTitle,
  getErrorMessage,
  handleApiError,
  isAppError,
  isDOMSupported,
  isWebEnvironment,
  logError,
  retryWithBackoff,
  safeAsync,
  safeParallel,
  setDocumentTitle,
  withCache,
  withErrorBoundary,
  withLoadingState,
  withTimeout,

  // Auth Utils
  CreateForwardedAddressParams,
  CreateUserParams,
  ForwardMessageParams,
  SearchApplyParams,
  SigninMessage,
  SubmitMessageParams,
  UpdateForwardedAddressParams,
  UpdateUserParams,
  UploadMessageParams,
  WildDuckAPIClient,
  WildDuckAddressHelper,
  WildDuckAuthHelper,
  WildDuckAuthResult,
  WildDuckMessageHelper,
  WildDuckUserHelper,
  createAuthMessage,
  createWildDuckAuthMessage,
  authenticateWithPassword,
  clearWildDuckAuth,
  createSIWEMessage,
  createSolanaSignMessage,
  formatSignatureForWildDuck,
  detectAddressType,
  getAuthenticatedUsers,
  getWildDuckStorageKeys,
  getWildDuckUserId,
  isValidBlockchainUsername,

  // Blockchain Utils
  WalletCapability,
  WalletDebugInfo,
  generateWalletDiagnostics,
  getWalletCapabilities,
  isWalletAvailable,
  logWalletDiagnostics,
  needsChainSelection,

  // Contract Utils
  ClaimableInfo,
  DelegationResult,
  MAILER_ABI,
  MAILER_CONTRACT_ADDRESS,
  MAIL_SERVICE_ABI,
  MAIL_SERVICE_CONTRACT_ADDRESS,
  MailResult,
  MailServiceContract,
  MailerContract,
  USDC_ABI,
  USDC_CONTRACT_ADDRESS,
  createMailServiceContract,
  createMailerContract,
  getMailServiceContract,
  getMailerContract,

  // Name Service Utils
  ENSName,
  NameResolutionResult,
  SNSName,
  getDisplayTextForResolution,
  getENSNames,
  getSNSNames,
  isValidAddress,
  resolveENSName,
  resolveNameOrAddress,
  resolveSNSDomain,
  resolveSNSName,
  validateENSName,
  validateNameOrAddressInput,
  validateSNSName,
  testENSResolution,

  // Navigation Utils
  getNavigationService,
  navigationHelper,
  useLocation,
  useNavigation,
  useSearchParams,

  // Notification Utils
  createNotificationHelper,

  // Indexer Utils
  AdminBulkCodesResponse,
  AdminCampaignConfig,
  AdminFlaggedUser,
  AdminFlaggedUsers,
  AdminOverviewStats,
  AdminPointsAward,
  AdminUserFlag,
  IndexerAdminConfig,
  IndexerAdminHelper,
  IndexerChainStatistics,
  IndexerEventLog,
  IndexerGraphQLConfig,
  IndexerGraphQLHelper,
  IndexerUserStatistics,
  IndexerWebhookConfig,
  IndexerWebhookHelper,
  PaginationInput,
  WebhookEmailSent,
  WebhookLoginEvent,
  WebhookLoginResult,
  WebhookRecipientLogin,
  WebhookReferralRegistration,
  WebhookResponse,
  WhereInput,
  createIndexerAdmin,
  createIndexerAdminHelper,
  createIndexerGraphQL,
  createIndexerGraphQLHelper,
  createIndexerHelpers,
  createIndexerWebhook,
  createIndexerWebhookHelper,
} from './utils';

// Types - Selective exports to avoid conflicts (Goal 1)
// Export main email/API types but let business logic take precedence for enums
export {
  ApiClientConfig,
  // Error types
  ApiError,
  // Configuration types
  ApiInterceptor,
  ApiResponse,
  AuthenticationError,
  ChainInfo,
  // UI types
  DocSection,
  EmailListOptions,
  // Service interface types (email and persistence only)
  EmailService,
  GraphQLPaginationInput,
  GraphQLWhereInput,
  IndexerCampaign,
  IndexerCampaignsResponse,
  IndexerCampaignStatsResponse,
  IndexerDelegatedToResponse,
  IndexerDelegationResponse,
  IndexerEarnMethod,
  IndexerEmailResponse,
  IndexerEntitlementResponse,
  IndexerHowToEarnResponse,
  IndexerLeaderboardEntry,
  IndexerLeaderboardResponse,
  IndexerMessageResponse,
  IndexerNonceResponse,
  IndexerPointsHistoryEntry,
  IndexerPointsHistoryResponse,
  IndexerPointsSummary,
  IndexerPointsSummaryResponse,
  IndexerPromoCodeResponse,
  IndexerPromoValidationResponse,
  IndexerPublicStatsResponse,
  IndexerRefereeLoginResponse,
  IndexerReferralResponse,
  IndexerSignatureRequest,
  IndexerSignatureVerification,
  isGraphQLResponse,
  isIndexerEmailResponse,
  // Type guards and validators
  isWildDuckAuthResponse,
  isWildDuckMessage,
  Mailbox,
  MailboxService,
  MockDataProvider,
  PaginationParams,
  PaginationResponse,
  PersistenceOptions,
  PersistenceResult,
  PersistenceService,
  StorageInfo,
  validateEmailAddress,
  validateObjectId,
  validateWalletAddress,
  ValidationError,
  WildDuckAddress,
  WildDuckAddressResponse,
  // API types
  WildDuckAuthRequest,
  WildDuckAuthResponse,
  WildDuckCreateMailboxRequest,
  WildDuckCreateUserRequest,
  WildDuckMessageAddress,
  WildDuckMessageAttachment,
  WildDuckMessageBase,
  WildDuckMessageDetail,
  WildDuckPreAuthRequest,
  WildDuckPreAuthResponse,
  WildDuckSendMessageRequest,
  WildDuckUpdateUserRequest,
  WildDuckUser,
  WildDuckUserResponse,
} from './types';

// Local business types with extensions
export { WalletUserData, User, EmailAddress } from './types/email';
export { WalletAccount } from '@johnqh/types';

// Email transformation utilities
export {
  transformWalletAccountsToEmailGroups,
  flattenEmailGroups,
  chainTypeToString,
  WalletEmailGroup,
} from './utils/email/email-transformations';
